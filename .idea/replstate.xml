<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1423340774119">{:repl-history {:ide [], :local [&quot;(println \&quot;test\&quot;)&quot; &quot;(println \&quot;stuff\&quot;)&quot; &quot;(+ 1 2 3 4)&quot; &quot;(defn get-mm\n  \&quot;Extract a mindmap by id\&quot;\n  [hype id]\n  ((hype :maps) id))&quot; &quot;mm = (default-mindmap)&quot; &quot;mm = (mm/default-mindmap)&quot; &quot;node = (mm/default-node)&quot; &quot;(println (mm/default-mindmap))&quot; &quot;(def mm (mm/default-mindmap))&quot; &quot;(println @mm)&quot; &quot;(mindmap.mm-pub/get-edges)&quot; &quot;(mindmap.mm-pub/get-edges hyper)&quot; &quot;(def node (mm/entity {:test }))&quot; &quot;(def node (mm/entity {:test \&quot;test attribute\&quot;}))&quot; &quot;(println node)&quot; &quot;(println (mm/get-entity mm node 13))&quot; &quot;()&quot; &quot;(println (mm/get-entity mm :nodes 13))&quot; &quot;(println (mm/get-entity mm :nodes 8))&quot; &quot;(def node2 (mm/entity {:test2 \&quot;attribute 2\&quot;}))&quot; &quot;(mm/update mm :node node2)&quot; &quot;(println mm)&quot; &quot;(println node2)&quot; &quot;(println hype)&quot; &quot;(def n1 (entity {:test1 \&quot;test 1\&quot;}))\n                 &quot; &quot;(def n1 (entity {:test1 \&quot;Test 1\&quot;}))&quot; &quot;(def n1 (mm/entity {:test1 \&quot;Test 1\&quot;}))&quot; &quot;(println n1)&quot; &quot;(+ 1 4 2)&quot; &quot;(refresh)&quot; &quot;(def mmap (mm/default-mindmap))&quot; &quot;(println mmap)&quot; &quot;(mindmap.mm-pub/default-hypermap)&quot; &quot;(ref hyper (mindmap.mm-pub/default-hypermap))&quot; &quot;(def hyper (mindmap.mm-pub/default-hypermap))&quot; &quot;(demo hyper)&quot; &quot;(mindmap.util/demo hyper)&quot; &quot;(println mm/add-node-from nil nil nil)&quot; &quot;(println hyper)&quot; &quot;(mindmap.mm-pub/get-head hyper)&quot;], :remote []}}</component>
</project>